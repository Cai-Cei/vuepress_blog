{"remainingRequest":"/Users/wenboran/Documents/my_blog/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/wenboran/Documents/my_blog/vuepress-starter/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/wenboran/Documents/my_blog/vuepress-starter/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/wenboran/Documents/my_blog/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/wenboran/Documents/my_blog/vuepress-starter/docs/Git.md?vue&type=template&id=7560fc1e&","dependencies":[{"path":"/Users/wenboran/Documents/my_blog/vuepress-starter/docs/Git.md","mtime":1644543550634},{"path":"/Users/wenboran/Documents/my_blog/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1643164836824},{"path":"/Users/wenboran/Documents/my_blog/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1643164839499},{"path":"/Users/wenboran/Documents/my_blog/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1643164836824},{"path":"/Users/wenboran/Documents/my_blog/vuepress-starter/node_modules/vue-loader/lib/index.js","mtime":1643164839499},{"path":"/Users/wenboran/Documents/my_blog/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js","mtime":1643164836991}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}